---
import SpaceXIcon from '@/icons/SpaceX-icon.astro';

interface Props {
  id: string;
  name: string;
  details: string;
  img: string;
  success: boolean;
  flightNumber: number;
  article: string;
  failures: string;
  date_unix: number;
}



const { success, flightNumber, img, id, details, article, failures, name, date_unix } =
  Astro.props;
const launchStatus = success ? "Success" : "Failure";

const date = new Date(date_unix * 1000); // Convertir el timestamp a milisegundos
const date_unix_formatted = date.toLocaleDateString('en-CA'); // Formato de fecha (YYYY-MM-DD)
---

<a
  href={`/spaceX_launches/launch/${id}`}
  class="rounded-lg border shadow-d bg-gray-800 border-gray-700
hover: scale-105 hover: bg-gray-700
hover: border-gray-500 transition flex
flex-col"
>
  <picture class="flex justify-center p-4">
    {img ? (
       <img
      class="mb-5 rounded-lg"
      width="148px"
      src={img}
      alt={`Patch for launch ${id}`}
    />
    ):(
      <SpaceXIcon/>
    )}
   
  </picture>
  <header class="p-4 flex-grow">
    <span
      class:list={[
        "text-white text-xs font-semibold mr-2 px-2.5 py-0.5 rounded",
        {
          "bg-green-400 text-green-900": success,
          "bg-red-400 text-red-900": !success,
        },
      ]}
    >
      {launchStatus}</span
    >
    <h2 class="text-white">Flight #{flightNumber}</h2>
    <h3 class="text-white font-bold">{name}</h3>

    <span class="text-white">{date_unix_formatted}</span>
    <p class="text-gray-500">
      {details?.length > 100 ? details.slice(0, 100) + "..." : details}
    </p>
    <br />
    {
      !success ? (
        <p class="text-gray-500">
          <b class="text-white"> Reason failure:</b> {failures}
        </p>
      ) : (
        <p class="text-gray-500" />
      )
    }
  </header>
</a>
